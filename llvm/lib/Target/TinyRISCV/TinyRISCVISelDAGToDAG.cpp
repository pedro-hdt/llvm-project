//
// Created by pedro-teixeira on 23/09/2020.
//

#include "MCTargetDesc/TinyRISCVMCTargetDesc.h"
#include "TinyRISCV.h"
#include "TinyRISCVTargetMachine.h"
#include "llvm/CodeGen/MachineFrameInfo.h"
#include "llvm/CodeGen/SelectionDAGISel.h"
#include "llvm/Support/Debug.h"
using namespace llvm;

#define DEBUG_TYPE "tinyriscv-isel"

namespace {
class TinyRISCVDAGToDAGISel : public SelectionDAGISel {
  const TinyRISCVSubtarget *Subtarget = nullptr;

public:
  explicit TinyRISCVDAGToDAGISel(TinyRISCVTargetMachine &TargetMachine)
      : SelectionDAGISel(TargetMachine) {}

  StringRef getPassName() const override {
    return "TinyRISCV DAG->DAG Pattern Instruction Selection";
  }

  bool runOnMachineFunction(MachineFunction &MF) override {
    Subtarget = &MF.getSubtarget<TinyRISCVSubtarget>();
    return SelectionDAGISel::runOnMachineFunction(MF);
  }

  void Select(SDNode *Node) override;

// Include the pieces autogenerated from the target description.
#include "TinyRISCVGenDAGISel.inc"

};
}


void TinyRISCVDAGToDAGISel::Select(SDNode *Node) {
  // If we have a custom node, we have already selected.
  if (Node->isMachineOpcode()) {
    LLVM_DEBUG(dbgs() << "== "; Node->dump(CurDAG); dbgs() << "\n");
    Node->setNodeId(-1);
    return;
  }

  // Instruction Selection not handled by the auto-generated tablegen selection
  // should be handled here.

  // see how other backends do it if needed later

  SelectCode(Node);
}

FunctionPass *llvm::createTinyRISCVISelDag(TinyRISCVTargetMachine &TM) {
  return new TinyRISCVDAGToDAGISel(TM);
}
